#!/usr/bin/env python3
"""
Launcher script for Telegram Channel Finder Bot
–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤ Paketo Buildpacks
"""

import subprocess
import sys
import time
import signal
import os
from threading import Thread

class ProcessLauncher:
    def __init__(self):
        self.bot_process = None
        self.admin_process = None
        self.running = True
        
    def signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        print(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã...")
        self.running = False
        
        if self.bot_process:
            self.bot_process.terminate()
        if self.admin_process:
            self.admin_process.terminate()
            
        sys.exit(0)
    
    def start_bot(self):
        """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
        try:
            print("ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞...")
            self.bot_process = subprocess.Popen(
                [sys.executable, "main.py"],
                stdout=subprocess.PIPE,
                stderr=subprocess.STDOUT,
                universal_newlines=True,
                bufsize=1
            )
            
            # –ß–∏—Ç–∞–µ–º –≤—ã–≤–æ–¥ –±–æ—Ç–∞
            for line in iter(self.bot_process.stdout.readline, ''):
                if not self.running:
                    break
                print(f"[BOT] {line.strip()}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
    
    def start_admin(self):
        """–ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
        try:
            print("üåê –ó–∞–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å...")
            self.admin_process = subprocess.Popen(
                [sys.executable, "run_admin.py"],
                stdout=subprocess.PIPE,
                stderr=subprocess.STDOUT,
                universal_newlines=True,
                bufsize=1
            )
            
            # –ß–∏—Ç–∞–µ–º –≤—ã–≤–æ–¥ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
            for line in iter(self.admin_process.stdout.readline, ''):
                if not self.running:
                    break
                print(f"[ADMIN] {line.strip()}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: {e}")
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞"""
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal.signal(signal.SIGTERM, self.signal_handler)
        signal.signal(signal.SIGINT, self.signal_handler)
        
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram Channel Finder Bot...")
        print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
        bot_thread = Thread(target=self.start_bot, daemon=True)
        admin_thread = Thread(target=self.start_admin, daemon=True)
        
        bot_thread.start()
        admin_thread.start()
        
        print("‚úÖ –û–±–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–ø—É—â–µ–Ω—ã!")
        
        try:
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            while self.running:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
                if self.bot_process and self.bot_process.poll() is not None:
                    print("‚ùå –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ!")
                    break
                    
                if self.admin_process and self.admin_process.poll() is not None:
                    print("‚ùå –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ!")
                    break
                    
                time.sleep(1)
                
        except KeyboardInterrupt:
            print("‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        finally:
            self.signal_handler(signal.SIGTERM, None)

if __name__ == "__main__":
    launcher = ProcessLauncher()
    launcher.run()
