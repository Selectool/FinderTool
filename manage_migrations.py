#!/usr/bin/env python3
"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –¥–ª—è Telegram Channel Finder Bot
"""
import asyncio
import sys
import os
from pathlib import Path

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ["PYTHONPATH"] = str(Path(__file__).parent)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏—è–º–∏"""
    if len(sys.argv) < 2:
        print_help()
        return
    
    command = sys.argv[1]
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    database_url = os.getenv('DATABASE_URL')
    if not database_url:
        environment = os.getenv('ENVIRONMENT', 'development')
        if environment == 'production':
            database_url = 'postgresql://findertool_user:Findertool1999!@findertool-hyvrte:5432/findertool_prod'
        else:
            database_url = 'sqlite:///bot.db'
    
    print(f"üîó –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ë–î: {database_url}")
    
    from database.migration_manager import MigrationManager
    manager = MigrationManager(database_url)
    
    if command == "migrate":
        print("üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∏–≥—Ä–∞—Ü–∏–π...")
        await manager.migrate()
        
    elif command == "status":
        print("üìä –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π...")
        await manager.status()
        
    elif command == "create":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏: python manage_migrations.py create '–û–ø–∏—Å–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏'")
            return
        
        description = sys.argv[2]
        filename = manager.create_migration(description)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è: {filename}")
        print(f"üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª: database/migrations/{filename}")
        
    elif command == "rollback":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä—Å–∏—é –º–∏–≥—Ä–∞—Ü–∏–∏: python manage_migrations.py rollback 001")
            return
        
        version = sys.argv[2]
        print(f"‚è™ –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ {version}...")
        await manager.rollback_migration(version)
        
    elif command == "init":
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –º–∏–≥—Ä–∞—Ü–∏–π...")
        await manager.init_migrations_table()
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–∏–≥—Ä–∞—Ü–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
    elif command == "reset":
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ!")
        confirm = input("–í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ")
        if confirm == "YES":
            await reset_database(manager)
        else:
            print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
            
    elif command == "sync":
        print("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å production...")
        await sync_with_production(manager)
        
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        print_help()

def print_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
    print("""
üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ Telegram Channel Finder Bot

–ö–æ–º–∞–Ω–¥—ã:
  migrate              –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –Ω–µ–ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
  status               –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
  create <–æ–ø–∏—Å–∞–Ω–∏–µ>    –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
  rollback <–≤–µ—Ä—Å–∏—è>    –û—Ç–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é
  init                 –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –º–∏–≥—Ä–∞—Ü–∏–π
  reset                –°–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–û–ü–ê–°–ù–û!)
  sync                 –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å production

–ü—Ä–∏–º–µ—Ä—ã:
  python manage_migrations.py migrate
  python manage_migrations.py status
  python manage_migrations.py create "–î–æ–±–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø–ª–∞—Ç–µ–∂–µ–π"
  python manage_migrations.py rollback 003

–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
  DATABASE_URL         URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  ENVIRONMENT          –û–∫—Ä—É–∂–µ–Ω–∏–µ (development/production)
""")

async def reset_database(manager):
    """–°–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("üóëÔ∏è –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    applied_migrations = await manager.get_applied_migrations()
    applied_migrations.reverse()
    
    # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    for version in applied_migrations:
        try:
            print(f"‚è™ –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ {version}...")
            await manager.rollback_migration(version)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–∫–∞—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ {version}: {e}")
    
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞")

async def sync_with_production(manager):
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É —Å production"""
    print("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å production...")
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    await manager.migrate()
    
    print("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    print("üéØ –¢–µ–ø–µ—Ä—å –ª–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç production")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
