#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π Python —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å Supervisor –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
"""
import subprocess
import sys
import os
import time
import signal
from pathlib import Path

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ["ENVIRONMENT"] = "production"
os.environ["PYTHONPATH"] = "/app"
os.environ["PYTHONUNBUFFERED"] = "1"

class SupervisorManager:
    def __init__(self):
        self.supervisor_config = """
[supervisord]
nodaemon=true
user=root
logfile=/tmp/supervisord.log
pidfile=/tmp/supervisord.pid
childlogdir=/tmp
loglevel=info

[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:telegram_bot]
command=python main.py
directory=/app
autostart=true
autorestart=true
startretries=3
user=root
redirect_stderr=true
stdout_logfile=/tmp/telegram_bot.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5
environment=ENVIRONMENT=production,PYTHONPATH=/app,PYTHONUNBUFFERED=1

[program:admin_panel]
command=python run_admin.py
directory=/app
autostart=true
autorestart=true
startretries=3
user=root
redirect_stderr=true
stdout_logfile=/tmp/admin_panel.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5
environment=ENVIRONMENT=production,PYTHONPATH=/app,PYTHONUNBUFFERED=1
priority=999

[group:findertool_services]
programs=telegram_bot,admin_panel
priority=999
"""
        self.supervisor_process = None
        
    def install_supervisor(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ supervisor –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"""
        try:
            subprocess.run(["supervisord", "--version"], 
                         check=True, capture_output=True)
            print("‚úÖ Supervisor —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return True
        except (subprocess.CalledProcessError, FileNotFoundError):
            print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Supervisor...")
            try:
                subprocess.run([
                    "apt-get", "update", "&&", 
                    "apt-get", "install", "-y", "supervisor"
                ], shell=True, check=True)
                print("‚úÖ Supervisor —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                return True
            except subprocess.CalledProcessError:
                print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Supervisor")
                return False
    
    def create_config(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ supervisor"""
        config_path = "/tmp/supervisord.conf"
        try:
            with open(config_path, 'w') as f:
                f.write(self.supervisor_config)
            print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: {config_path}")
            return config_path
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return None
    
    def start_supervisor(self, config_path):
        """–ó–∞–ø—É—Å–∫ supervisor"""
        try:
            print("üîÑ –ó–∞–ø—É—Å–∫ Supervisor...")
            self.supervisor_process = subprocess.Popen([
                "supervisord", "-c", config_path
            ])
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
            time.sleep(5)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            result = subprocess.run([
                "supervisorctl", "-c", config_path, "status"
            ], capture_output=True, text=True)
            
            if result.returncode == 0:
                print("‚úÖ Supervisor –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                print("üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:")
                print(result.stdout)
                return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Supervisor")
                print(result.stderr)
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Supervisor: {e}")
            return False
    
    def monitor_services(self, config_path):
        """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–æ–≤"""
        print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        print("üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://0.0.0.0:8080")
        print("üìã –õ–æ–≥–∏ –±–æ—Ç–∞: tail -f /tmp/telegram_bot.log")
        print("üìã –õ–æ–≥–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: tail -f /tmp/admin_panel.log")
        print("üîß –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C")
        
        try:
            while True:
                time.sleep(30)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
                result = subprocess.run([
                    "supervisorctl", "-c", config_path, "status"
                ], capture_output=True, text=True)
                
                if result.returncode == 0:
                    lines = result.stdout.strip().split('\n')
                    bot_status = "UNKNOWN"
                    admin_status = "UNKNOWN"
                    
                    for line in lines:
                        if "telegram_bot" in line:
                            bot_status = line.split()[1]
                        elif "admin_panel" in line:
                            admin_status = line.split()[1]
                    
                    timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
                    print(f"{timestamp} - Bot: {bot_status}, Admin: {admin_status}")
                    
                    # –ï—Å–ª–∏ –æ–±–∞ —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç
                    if bot_status != "RUNNING" and admin_status != "RUNNING":
                        print("‚ùå –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
                        break
                else:
                    print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")
                    
        except KeyboardInterrupt:
            print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
            self.stop_supervisor(config_path)
    
    def stop_supervisor(self, config_path):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ supervisor"""
        try:
            print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
            subprocess.run([
                "supervisorctl", "-c", config_path, "stop", "all"
            ], check=True)
            
            if self.supervisor_process:
                self.supervisor_process.terminate()
                self.supervisor_process.wait(timeout=10)
            
            print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞"""
        print("üöÄ –ó–∞–ø—É—Å–∫ Telegram Channel Finder Bot —Å Supervisor...")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º supervisor
        if not self.install_supervisor():
            return False
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config_path = self.create_config()
        if not config_path:
            return False
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º supervisor
        if not self.start_supervisor(config_path):
            return False
        
        # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Å–µ—Ä–≤–∏—Å—ã
        self.monitor_services(config_path)
        
        return True

if __name__ == "__main__":
    manager = SupervisorManager()
    
    def signal_handler(signum, frame):
        print(f"\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}")
        manager.stop_supervisor("/tmp/supervisord.conf")
        sys.exit(0)
    
    signal.signal(signal.SIGTERM, signal_handler)
    signal.signal(signal.SIGINT, signal_handler)
    
    try:
        success = manager.run()
        sys.exit(0 if success else 1)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
