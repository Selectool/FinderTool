# Dockerfile для Admin Panel Service
# Оптимизирован для Dokploy деплоя
FROM python:3.11-slim

# Устанавливаем системные зависимости
RUN apt-get update && apt-get install -y \
    libpq-dev \
    gcc \
    g++ \
    curl \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Создаем пользователя для безопасности
RUN useradd --create-home --shell /bin/bash --uid 1000 app

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем requirements и устанавливаем зависимости
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Копируем код приложения
COPY . .

# Создаем необходимые директории с правильными правами
RUN mkdir -p /app/data /app/logs /app/database/backups /app/uploads/broadcasts /app/admin/static /app/admin/templates && \
    chown -R app:app /app && \
    chmod -R 755 /app

# Переключаемся на пользователя app
USER app

# Устанавливаем переменные окружения для production
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV ENVIRONMENT=production
ENV DATABASE_TYPE=postgresql
ENV SERVICE_TYPE=admin-panel

# Открываем порт для админ-панели
EXPOSE 8080

# Health check для Dokploy
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=5 \
    CMD python -c "import requests; requests.get('http://localhost:8080/api/health', timeout=5)" || exit 1

# Запускаем только админ-панель
CMD ["python", "run_admin.py"]
