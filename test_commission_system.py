#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ production-ready —Å–∏—Å—Ç–µ–º—ã –∫–æ–º–∏—Å—Å–∏–π –ÆKassa
"""
import asyncio
import logging
from decimal import Decimal

from services.commission_calculator import (
    CommissionCalculator, 
    PaymentMethod,
    calculate_subscription_price_with_commission
)
from services.yookassa_client import yookassa_client
from config import SUBSCRIPTION_BASE_PRICE, YOOKASSA_COMMISSIONS

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_commission_calculator():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –∫–æ–º–∏—Å—Å–∏–π"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê –ö–û–ú–ò–°–°–ò–ô ===")
    
    calculator = CommissionCalculator()
    base_price = Decimal("349.00")
    
    print(f"–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {base_price}‚ÇΩ")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã
    for method in PaymentMethod:
        if method == PaymentMethod.DEFAULT:
            continue
            
        print(f"--- {method.value.upper()} ---")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É —Å –∫–æ–º–∏—Å—Å–∏–µ–π
        price_with_commission = calculator.calculate_amount_with_commission(
            base_price, method
        )
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–æ–º–∏—Å—Å–∏–∏
        commission_amount = calculator.get_commission_amount(base_price, method)
        commission_percent = calculator.get_commission_percent(method)
        
        # –û–±—Ä–∞—Ç–Ω—ã–π —Ä–∞—Å—á–µ—Ç
        calculated_base = calculator.calculate_amount_without_commission(
            price_with_commission, method
        )
        
        print(f"  –ö–æ–º–∏—Å—Å–∏—è: {commission_percent}%")
        print(f"  –ö –¥–æ–ø–ª–∞—Ç–µ: {price_with_commission}‚ÇΩ")
        print(f"  –†–∞–∑–º–µ—Ä –∫–æ–º–∏—Å—Å–∏–∏: {commission_amount}‚ÇΩ")
        print(f"  –û–±—Ä–∞—Ç–Ω—ã–π —Ä–∞—Å—á–µ—Ç: {calculated_base}‚ÇΩ")
        print(f"  –ü—Ä–æ–≤–µ—Ä–∫–∞: {abs(calculated_base - base_price) < Decimal('0.01')}")
        print()

async def test_subscription_pricing():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–°–ß–ï–¢–ê –¶–ï–ù–´ –ü–û–î–ü–ò–°–ö–ò ===")
    
    methods = ['bank_card', 'yoo_money', 'sberbank', 'qiwi', 'sbp', None]
    
    for method in methods:
        base_price, price_with_commission, commission_amount = calculate_subscription_price_with_commission(
            method
        )
        
        print(f"–ú–µ—Ç–æ–¥: {method or 'auto'}")
        print(f"  –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: {base_price}‚ÇΩ")
        print(f"  –ö –¥–æ–ø–ª–∞—Ç–µ: {price_with_commission}‚ÇΩ")
        print(f"  –ö–æ–º–∏—Å—Å–∏—è: {commission_amount}‚ÇΩ")
        print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç: {(commission_amount / base_price * 100):.2f}%")
        print()

async def test_yookassa_client():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –ÆKassa (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞)"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–õ–ò–ï–ù–¢–ê –ÆKASSA ===")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–∞
        print("‚úÖ –ÆKassa –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç —Ü–µ–Ω—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
        base_price, price_with_commission, commission_amount = calculate_subscription_price_with_commission(
            'bank_card'
        )
        
        print(f"–î–ª—è –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã:")
        print(f"  –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: {base_price}‚ÇΩ")
        print(f"  –ö –¥–æ–ø–ª–∞—Ç–µ: {price_with_commission}‚ÇΩ")
        print(f"  –ö–æ–º–∏—Å—Å–∏—è: {commission_amount}‚ÇΩ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–∞–∑—á–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—É—é —Å—É–º–º—É
        yookassa_commission = price_with_commission * Decimal("0.035")  # 3.5% –∫–æ–º–∏—Å—Å–∏—è –ÆKassa
        income_amount = price_with_commission - yookassa_commission
        
        print(f"  –ö–æ–º–∏—Å—Å–∏—è –ÆKassa (~3.5%): {yookassa_commission:.2f}‚ÇΩ")
        print(f"  –ü–æ–ª—É—á–∏—Ç –∑–∞–∫–∞–∑—á–∏–∫: {income_amount:.2f}‚ÇΩ")
        print(f"  –ó–∞–∫–∞–∑—á–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç >= –±–∞–∑–æ–≤–æ–π —Ü–µ–Ω—ã: {income_amount >= base_price}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ÆKassa –∫–ª–∏–µ–Ω—Ç–∞: {e}")

def test_edge_cases():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ì–†–ê–ù–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í ===")
    
    calculator = CommissionCalculator()
    
    # –¢–µ—Å—Ç —Å –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–æ–π —Å—É–º–º–æ–π
    small_amount = Decimal("1.00")
    result = calculator.calculate_amount_with_commission(small_amount, PaymentMethod.BANK_CARD)
    print(f"–ú–∞–ª–µ–Ω—å–∫–∞—è —Å—É–º–º–∞ {small_amount}‚ÇΩ -> {result}‚ÇΩ")
    
    # –¢–µ—Å—Ç —Å –±–æ–ª—å—à–æ–π —Å—É–º–º–æ–π
    large_amount = Decimal("10000.00")
    result = calculator.calculate_amount_with_commission(large_amount, PaymentMethod.BANK_CARD)
    print(f"–ë–æ–ª—å—à–∞—è —Å—É–º–º–∞ {large_amount}‚ÇΩ -> {result}‚ÇΩ")
    
    # –¢–µ—Å—Ç —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –º–µ—Ç–æ–¥–æ–º –æ–ø–ª–∞—Ç—ã
    result = calculator.calculate_amount_with_commission(
        Decimal("349.00"), 
        None  # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Ç–æ–¥
    )
    print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Ç–æ–¥: 349‚ÇΩ -> {result}‚ÇΩ")
    
    # –¢–µ—Å—Ç —Ç–æ—á–Ω–æ—Å—Ç–∏ —Ä–∞—Å—á–µ—Ç–æ–≤
    base = Decimal("349.00")
    with_commission = calculator.calculate_amount_with_commission(base, PaymentMethod.BANK_CARD)
    back_to_base = calculator.calculate_amount_without_commission(with_commission, PaymentMethod.BANK_CARD)
    difference = abs(base - back_to_base)
    
    print(f"–¢–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–æ–≤:")
    print(f"  –ò—Å—Ö–æ–¥–Ω–∞—è —Å—É–º–º–∞: {base}‚ÇΩ")
    print(f"  –° –∫–æ–º–∏—Å—Å–∏–µ–π: {with_commission}‚ÇΩ")
    print(f"  –û–±—Ä–∞—Ç–Ω–æ: {back_to_base}‚ÇΩ")
    print(f"  –†–∞–∑–Ω–∏—Ü–∞: {difference}‚ÇΩ")
    print(f"  –¢–æ—á–Ω–æ—Å—Ç—å OK: {difference < Decimal('0.01')}")

def test_real_world_scenarios():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–ê–õ–¨–ù–´–• –°–¶–ï–ù–ê–†–ò–ï–í ===")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–ª–∞—Ç–∏—Ç –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π
    print("–°—Ü–µ–Ω–∞—Ä–∏–π 1: –û–ø–ª–∞—Ç–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π")
    base_price, total_price, commission = calculate_subscription_price_with_commission('bank_card')
    
    print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Ü–µ–Ω—É: {total_price}‚ÇΩ")
    print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–ª–∞—Ç–∏—Ç: {total_price}‚ÇΩ")
    
    # –≠–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∏—Å—Å–∏—é –ÆKassa (3.5%)
    yookassa_fee = total_price * Decimal("0.035")
    merchant_receives = total_price - yookassa_fee
    
    print(f"  –ÆKassa —É–¥–µ—Ä–∂–∏–≤–∞–µ—Ç: {yookassa_fee:.2f}‚ÇΩ")
    print(f"  –ó–∞–∫–∞–∑—á–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç: {merchant_receives:.2f}‚ÇΩ")
    print(f"  –ó–∞–∫–∞–∑—á–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç >= 349‚ÇΩ: {merchant_receives >= Decimal('349.00')}")
    print()
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–ª–∞—Ç–∏—Ç —á–µ—Ä–µ–∑ QIWI (–≤—ã—Å–æ–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è)
    print("–°—Ü–µ–Ω–∞—Ä–∏–π 2: –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ QIWI")
    base_price, total_price, commission = calculate_subscription_price_with_commission('qiwi')
    
    print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Ü–µ–Ω—É: {total_price}‚ÇΩ")
    print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–ª–∞—Ç–∏—Ç: {total_price}‚ÇΩ")
    
    # –≠–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∏—Å—Å–∏—é –ÆKassa –¥–ª—è QIWI (6%)
    yookassa_fee = total_price * Decimal("0.06")
    merchant_receives = total_price - yookassa_fee
    
    print(f"  –ÆKassa —É–¥–µ—Ä–∂–∏–≤–∞–µ—Ç: {yookassa_fee:.2f}‚ÇΩ")
    print(f"  –ó–∞–∫–∞–∑—á–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç: {merchant_receives:.2f}‚ÇΩ")
    print(f"  –ó–∞–∫–∞–∑—á–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç >= 349‚ÇΩ: {merchant_receives >= Decimal('349.00')}")
    print()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PRODUCTION-READY –°–ò–°–¢–ï–ú–´ –ö–û–ú–ò–°–°–ò–ô –ÆKASSA")
    print("=" * 60)
    print()
    
    # –í—ã–≤–æ–¥–∏–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print("–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:")
    print(f"  –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {SUBSCRIPTION_BASE_PRICE}‚ÇΩ")
    print(f"  –ö–æ–º–∏—Å—Å–∏–∏: {YOOKASSA_COMMISSIONS}")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    await test_commission_calculator()
    await test_subscription_pricing()
    await test_yookassa_client()
    test_edge_cases()
    test_real_world_scenarios()
    
    print("=" * 60)
    print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´")
    print()
    print("–ò–¢–û–ì–û–í–´–ï –í–´–í–û–î–´:")
    print("1. –ó–∞–∫–∞–∑—á–∏–∫ –≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—É—é —Å—É–º–º—É 349‚ÇΩ")
    print("2. –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –¥–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –∫–æ–º–∏—Å—Å–∏—é —Å–≤–µ—Ä—Ö—É")
    print("3. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")

if __name__ == "__main__":
    asyncio.run(main())
