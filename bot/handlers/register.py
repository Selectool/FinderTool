"""
–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è Telegram –±–æ—Ç–∞
Production-ready —Å–∏—Å—Ç–µ–º–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π admin access
"""

import logging
from aiogram import Dispatcher

logger = logging.getLogger(__name__)

def register_handlers(dp: Dispatcher):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±–æ—Ç–∞
    –ü–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã FSM —Å–æ—Å—Ç–æ—è–Ω–∏–π
    """
    try:
        logger.info("üîß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±–æ—Ç–∞...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã
        from . import (
            admin_access,  # Secure admin access - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º
            admin,         # –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã
            basic,         # –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã (/start, /help)
            subscription,  # –ü–æ–¥–ø–∏—Å–∫–∞ –∏ –ø–ª–∞—Ç–µ–∂–∏
            channels,      # –ü–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–æ–≤
            reply_menu,    # Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            developer,     # –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
            role_management,  # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏
            feedback,      # –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            payment_stats  # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
        )
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        routers = [
            admin_access.router,    # Secure admin access - –ü–ï–†–í–´–ô
            admin.router,          # –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã - –≤—Ç–æ—Ä–æ–π –¥–ª—è FSM
            reply_menu.router,     # Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            basic.router,          # –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
            subscription.router,   # –ü–æ–¥–ø–∏—Å–∫–∞ –∏ –ø–ª–∞—Ç–µ–∂–∏
            channels.router,       # –ü–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–æ–≤
            developer.router,      # –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
            role_management.router, # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏
            feedback.router,       # –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            payment_stats.router   # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
        ]
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã
        for i, router in enumerate(routers):
            dp.include_router(router)
            logger.info(f"‚úÖ –†–æ—É—Ç–µ—Ä {i+1}/{len(routers)} –ø–æ–¥–∫–ª—é—á–µ–Ω: {router}")
        
        logger.info("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
        _start_background_tasks()
        
    except ImportError as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
        logger.info("üîÑ –ü—ã—Ç–∞–µ–º—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...")
        
        # Fallback - —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        _register_available_handlers(dp)
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
        raise

def _register_available_handlers(dp: Dispatcher):
    """Fallback —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    available_handlers = []
    
    # –°–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    handler_modules = [
        'admin_access', 'admin', 'basic', 'subscription', 
        'channels', 'reply_menu', 'developer', 'role_management',
        'feedback', 'payment_stats'
    ]
    
    for module_name in handler_modules:
        try:
            module = __import__(f'bot.handlers.{module_name}', fromlist=['router'])
            if hasattr(module, 'router'):
                dp.include_router(module.router)
                available_handlers.append(module_name)
                logger.info(f"‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ {module_name} –ø–æ–¥–∫–ª—é—á–µ–Ω")
        except ImportError as e:
            logger.warning(f"‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ {module_name} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è {module_name}: {e}")
    
    logger.info(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ {len(available_handlers)} –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {', '.join(available_handlers)}")

def _start_background_tasks():
    """–ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á"""
    try:
        import asyncio
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ admin access
        try:
            from .admin_access import cleanup_expired_tokens_task
            asyncio.create_task(cleanup_expired_tokens_task())
            logger.info("‚úÖ –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ –∑–∞–ø—É—â–µ–Ω–∞")
        except ImportError:
            logger.warning("‚ö†Ô∏è –ú–æ–¥—É–ª—å admin_access –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á")
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á: {e}")

# –≠–∫—Å–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
__all__ = ['register_handlers']
