#!/bin/bash

# =============================================================================
# PostgreSQL Backup Script –¥–ª—è Production
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ backup —Å —Ä–æ—Ç–∞—Ü–∏–µ–π
# =============================================================================

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKUP_DIR="data/backups"
POSTGRES_CONTAINER="telegram-bot-postgres"
POSTGRES_DB="telegram_bot"
POSTGRES_USER="postgres"
RETENTION_DAYS=7  # –•—Ä–∞–Ω–∏—Ç—å backup 7 –¥–Ω–µ–π

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –°–æ–∑–¥–∞–Ω–∏–µ backup
create_backup() {
    local timestamp=$(date +%Y%m%d_%H%M%S)
    local backup_file="$BACKUP_DIR/postgres_backup_$timestamp.sql"
    local backup_compressed="$backup_file.gz"
    
    log_info "üíæ –°–æ–∑–¥–∞–Ω–∏–µ backup PostgreSQL..."
    log_info "üìÅ –§–∞–π–ª: $backup_compressed"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    mkdir -p "$BACKUP_DIR"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω
    if ! docker ps | grep -q "$POSTGRES_CONTAINER"; then
        log_error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω: $POSTGRES_CONTAINER"
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º backup
    docker exec "$POSTGRES_CONTAINER" pg_dump \
        -U "$POSTGRES_USER" \
        -d "$POSTGRES_DB" \
        --verbose \
        --clean \
        --if-exists \
        --create \
        --format=plain > "$backup_file"
    
    # –°–∂–∏–º–∞–µ–º backup
    gzip "$backup_file"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
    local size=$(du -h "$backup_compressed" | cut -f1)
    log_success "Backup —Å–æ–∑–¥–∞–Ω: $backup_compressed ($size)"
    
    echo "$backup_compressed"
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup
cleanup_old_backups() {
    log_info "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup (—Å—Ç–∞—Ä—à–µ $RETENTION_DAYS –¥–Ω–µ–π)..."
    
    local deleted_count=0
    
    # –ù–∞—Ö–æ–¥–∏–º –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
    find "$BACKUP_DIR" -name "postgres_backup_*.sql.gz" -type f -mtime +$RETENTION_DAYS -print0 | \
    while IFS= read -r -d '' file; do
        log_info "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π backup: $(basename "$file")"
        rm "$file"
        ((deleted_count++))
    done
    
    if [ $deleted_count -gt 0 ]; then
        log_success "–£–¥–∞–ª–µ–Ω–æ $deleted_count —Å—Ç–∞—Ä—ã—Ö backup"
    else
        log_info "–°—Ç–∞—Ä—ã–µ backup –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backup
verify_backup() {
    local backup_file="$1"
    
    log_info "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ backup..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –ø—É—Å—Ç–æ–π
    if [ ! -f "$backup_file" ] || [ ! -s "$backup_file" ]; then
        log_error "Backup —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π gzip —Ñ–∞–π–ª
    if ! gzip -t "$backup_file" 2>/dev/null; then
        log_error "Backup —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω (–Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π gzip)"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    local content_check=$(zcat "$backup_file" | head -n 10 | grep -c "PostgreSQL database dump" || true)
    if [ "$content_check" -eq 0 ]; then
        log_error "Backup —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–ª–∏–¥–Ω—ã–π PostgreSQL dump"
        return 1
    fi
    
    log_success "Backup –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏"
    return 0
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ backup
restore_backup() {
    local backup_file="$1"
    
    if [ -z "$backup_file" ]; then
        log_error "–ù–µ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª backup –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 restore <backup_file>"
        exit 1
    fi
    
    if [ ! -f "$backup_file" ]; then
        log_error "Backup —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $backup_file"
        exit 1
    fi
    
    log_warning "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ!"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " confirm
    
    if [ "$confirm" != "yes" ]; then
        log_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
        exit 0
    fi
    
    log_info "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ backup: $backup_file"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    docker-compose stop telegram-bot || true
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    log_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."
    zcat "$backup_file" | docker exec -i "$POSTGRES_CONTAINER" psql -U "$POSTGRES_USER"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    log_info "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    docker-compose start telegram-bot
    
    log_success "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö backup
list_backups() {
    log_info "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ backup:"
    
    if [ ! -d "$BACKUP_DIR" ]; then
        log_warning "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backup –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $BACKUP_DIR"
        return
    fi
    
    local backups=($(find "$BACKUP_DIR" -name "postgres_backup_*.sql.gz" -type f | sort -r))
    
    if [ ${#backups[@]} -eq 0 ]; then
        log_warning "Backup —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return
    fi
    
    echo ""
    printf "%-30s %-10s %-20s\n" "–§–ê–ô–õ" "–†–ê–ó–ú–ï–†" "–î–ê–¢–ê"
    echo "================================================================"
    
    for backup in "${backups[@]}"; do
        local filename=$(basename "$backup")
        local size=$(du -h "$backup" | cut -f1)
        local date=$(stat -c %y "$backup" | cut -d' ' -f1,2 | cut -d'.' -f1)
        printf "%-30s %-10s %-20s\n" "$filename" "$size" "$date"
    done
    
    echo ""
}

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π backup (–¥–ª—è cron)
auto_backup() {
    log_info "ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π backup..."
    
    # –°–æ–∑–¥–∞–µ–º backup
    local backup_file=$(create_backup)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º backup
    if verify_backup "$backup_file"; then
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ backup
        cleanup_old_backups
        
        log_success "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π backup –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        log_error "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π backup –ø—Ä–æ–≤–∞–ª–µ–Ω"
        exit 1
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
show_help() {
    echo "PostgreSQL Backup Script –¥–ª—è Telegram Channel Finder Bot"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  $0 create                    - –°–æ–∑–¥–∞—Ç—å backup"
    echo "  $0 restore <backup_file>     - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ backup"
    echo "  $0 list                      - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ backup"
    echo "  $0 cleanup                   - –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ backup"
    echo "  $0 auto                      - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π backup (–¥–ª—è cron)"
    echo "  $0 help                      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 create"
    echo "  $0 restore data/backups/postgres_backup_20250101_120000.sql.gz"
    echo "  $0 list"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "${1:-help}" in
        "create")
            backup_file=$(create_backup)
            verify_backup "$backup_file"
            ;;
        "restore")
            restore_backup "$2"
            ;;
        "list")
            list_backups
            ;;
        "cleanup")
            cleanup_old_backups
            ;;
        "auto")
            auto_backup
            ;;
        "help"|*)
            show_help
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"
