"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
"""
import os
import json
from dotenv import load_dotenv

load_dotenv()

# Telegram Bot API
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è! –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ .env —Ñ–∞–π–ª")

# Telegram API –¥–ª—è Telethon
API_ID = int(os.getenv("API_ID", "0"))
API_HASH = os.getenv("API_HASH", "")

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ PostgreSQL)
DATABASE_URL = os.getenv("DATABASE_URL")
if not DATABASE_URL:
    raise ValueError("DATABASE_URL –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞! –£–∫–∞–∂–∏—Ç–µ PostgreSQL URL –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
if not (DATABASE_URL.startswith('postgresql://') or DATABASE_URL.startswith('postgres://')):
    raise ValueError("–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ PostgreSQL. DATABASE_URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 'postgresql://' –∏–ª–∏ 'postgres://'.")

# –ê–¥–º–∏–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
ADMIN_USER_ID = int(os.getenv("ADMIN_USER_ID", "0"))

# –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–∏–º–µ—é—Ç –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø)
DEVELOPER_IDS = [5699315855]  # ID —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞

# Production-ready –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
SUBSCRIPTION_PRICE = int(os.getenv("SUBSCRIPTION_PRICE", "500"))  # –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞
FREE_REQUESTS_LIMIT = int(os.getenv("FREE_REQUESTS_LIMIT", "3"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è production
MAX_REQUESTS_PER_MINUTE = int(os.getenv("MAX_REQUESTS_PER_MINUTE", "10"))
MAX_REQUESTS_PER_HOUR = int(os.getenv("MAX_REQUESTS_PER_HOUR", "100"))
RATE_LIMIT_ENABLED = os.getenv("RATE_LIMIT_ENABLED", "true").lower() == "true"

# Production Environment Detection
ENVIRONMENT = os.getenv("ENVIRONMENT", "development")
IS_PRODUCTION = ENVIRONMENT == "production"

# –ÆKassa –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - Production-ready –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
YOOKASSA_MODE = "LIVE" if IS_PRODUCTION else os.getenv("YOOKASSA_MODE", "TEST")

# –¢–æ–∫–µ–Ω—ã –ÆKassa —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
YOOKASSA_TEST_TOKEN = os.getenv("YOOKASSA_TEST_TOKEN", "381764678:TEST:132745")
YOOKASSA_LIVE_TOKEN = os.getenv("YOOKASSA_LIVE_TOKEN", "live_O2uh0MKZesYawcyTyiT6WMlV3IeDfIULnZTkVt5cQW0")

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ÆKassa
YOOKASSA_CURRENCY = os.getenv("YOOKASSA_CURRENCY", "RUB")
YOOKASSA_PRODUCT_DESCRIPTION = os.getenv("YOOKASSA_PRODUCT_DESCRIPTION", "–ü–æ–¥–ø–∏—Å–∫–∞ FinderTool –Ω–∞ –º–µ—Å—è—Ü")
YOOKASSA_VAT_CODE = int(os.getenv("YOOKASSA_VAT_CODE", "1"))

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
YOOKASSA_PROVIDER_TOKEN = YOOKASSA_LIVE_TOKEN if YOOKASSA_MODE == "LIVE" else YOOKASSA_TEST_TOKEN

def validate_yookassa_token(token: str, mode: str) -> bool:
    """–í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ –ÆKassa —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤"""
    if not token:
        return False

    if mode == "LIVE":
        # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–∫ —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ (xxx:LIVE:xxx), —Ç–∞–∫ –∏ –Ω–æ–≤–æ–≥–æ (live_xxx)
        return ":LIVE:" in token or token.startswith("live_")
    elif mode == "TEST":
        # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–∫ —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ (xxx:TEST:xxx), —Ç–∞–∫ –∏ –Ω–æ–≤–æ–≥–æ (test_xxx)
        return ":TEST:" in token or token.startswith("test_")

    return False

# Production-ready –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
if YOOKASSA_MODE == "LIVE":
    if not YOOKASSA_LIVE_TOKEN:
        raise ValueError("LIVE —Ä–µ–∂–∏–º —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ YOOKASSA_LIVE_TOKEN")
    if not validate_yookassa_token(YOOKASSA_LIVE_TOKEN, "LIVE"):
        raise ValueError("LIVE —Ç–æ–∫–µ–Ω –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –û–∂–∏–¥–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç 'live_xxx' –∏–ª–∏ 'xxx:LIVE:xxx'")

if YOOKASSA_MODE == "TEST":
    if not YOOKASSA_TEST_TOKEN:
        raise ValueError("TEST —Ä–µ–∂–∏–º —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ YOOKASSA_TEST_TOKEN")
    if not validate_yookassa_token(YOOKASSA_TEST_TOKEN, "TEST"):
        raise ValueError("TEST —Ç–æ–∫–µ–Ω –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –û–∂–∏–¥–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç 'test_xxx' –∏–ª–∏ 'xxx:TEST:xxx'")

# –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ–∫–∞ (provider_data) - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Telegram Bot API
YOOKASSA_PROVIDER_DATA = json.dumps({
    "receipt": {
        "items": [
            {
                "description": YOOKASSA_PRODUCT_DESCRIPTION,
                "quantity": "1.00",
                "amount": {
                    "value": f"{SUBSCRIPTION_PRICE:.2f}",
                    "currency": YOOKASSA_CURRENCY
                },
                "vat_code": YOOKASSA_VAT_CODE,
                "payment_mode": "full_payment",
                "payment_subject": "service"
            }
        ],
        "customer": {
            "email": "support@findertool.ru"
        }
    }
}, ensure_ascii=False)

# Production-ready –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
import logging
logger = logging.getLogger(__name__)

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ —É—Ç–µ—á–∫–∏ sensitive –¥–∞–Ω–Ω—ã—Ö
def safe_log_token(token: str) -> str:
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è sensitive –¥–∞–Ω–Ω—ã—Ö"""
    if not token:
        return "–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù"
    if token.startswith("live_"):
        return f"live_***{token[-4:]}"
    elif token.startswith("test_"):
        return f"test_***{token[-4:]}"
    elif ":" in token:
        parts = token.split(":")
        return f"{parts[0]}:***:{parts[-1]}" if len(parts) >= 3 else "***"
    return "***"

# Production-ready –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ: {ENVIRONMENT.upper()}")
logger.info(f"üí≥ –ÆKassa —Ä–µ–∂–∏–º: {YOOKASSA_MODE}")
logger.info(f"üîë –ê–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω: {safe_log_token(YOOKASSA_PROVIDER_TOKEN)}")

if IS_PRODUCTION:
    logger.warning("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: PRODUCTION —Ä–µ–∂–∏–º - —Ä–µ–∞–ª—å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –∏ –¥–∞–Ω–Ω—ã–µ!")
    logger.info("üîí –í–∫–ª—é—á–µ–Ω—ã production security –º–µ—Ä—ã")
else:
    logger.info("üß™ Development —Ä–µ–∂–∏–º - —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–ª–∞—Ç–µ–∂–∏")

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è production
if IS_PRODUCTION:
    critical_vars = {
        "BOT_TOKEN": BOT_TOKEN,
        "DATABASE_URL": DATABASE_URL,
        "YOOKASSA_LIVE_TOKEN": YOOKASSA_LIVE_TOKEN,
        "API_ID": API_ID,
        "API_HASH": API_HASH
    }

    missing_vars = [var for var, value in critical_vars.items() if not value or (isinstance(value, int) and value == 0)]

    if missing_vars:
        raise ValueError(f"‚ùå Production —Ä–µ–∂–∏–º —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: {', '.join(missing_vars)}")

    logger.info("‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è production")

# –°–µ—Å—Å–∏—è Telethon
SESSION_NAME = os.getenv("SESSION_NAME", "bot_session")
SESSION_STRING = os.getenv("SESSION_STRING", "")

# –¢–µ–∫—Å—Ç—ã –±–æ—Ç–∞
TEXTS = {
    "start": """
ü§ñ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FinderTool!</b>

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ –∫–∞–Ω–∞–ª—ã –≤ Telegram.

üìù <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª (–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Å—ã–ª–æ–∫)
‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ—Ö–æ–∂–∏—Ö –∫–∞–Ω–∞–ª–æ–≤

üíé <b>–õ–∏–º–∏—Ç—ã:</b>
‚Ä¢ 3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞
‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: {price}‚ÇΩ/–º–µ—Å—è—Ü

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.
    """,
    
    "help": """
üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/subscribe - –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É

<b>–ö–∞–∫ –Ω–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ –∫–∞–Ω–∞–ª—ã:</b>
1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://t.me/channel_name)
2. –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Å—ã–ª–æ–∫ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
3. –ü–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ—Ö–æ–∂–∏—Ö –∫–∞–Ω–∞–ª–æ–≤

<b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Å—Å—ã–ª–æ–∫:</b>
‚Ä¢ https://t.me/channel_name
‚Ä¢ @channel_name
‚Ä¢ t.me/channel_name

üí¨ –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """,
    
    "no_requests_left": """
üòî <b>–õ–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω</b>

–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã ({limit} –∏–∑ {limit}).

üíé –û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ {price}‚ÇΩ/–º–µ—Å—è—Ü –¥–ª—è –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!

/subscribe - –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
    """,
    
    "processing": "üîç –ò—â—É –ø–æ—Ö–æ–∂–∏–µ –∫–∞–Ω–∞–ª—ã...",
    
    "no_channels_found": "üòî –ü–æ—Ö–æ–∂–∏–µ –∫–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.",
    
    "invalid_link": "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: {link}",
    
    "error": "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
    
    "subscription_info": """
üíé <b>–ü–æ–¥–ø–∏—Å–∫–∞ FinderTool</b>

<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {price}‚ÇΩ/–º–µ—Å—è—Ü
<b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>
‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚Ä¢ –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–≤—ã–º–∏

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:
    """
}

# Production-ready –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ÆKassa API
YOOKASSA_SHOP_ID = os.getenv("YOOKASSA_SHOP_ID", "390540012")
YOOKASSA_SECRET_KEY = os.getenv("YOOKASSA_SECRET_KEY",
    "live_MjkwNTQwMDEyOmxpdmVfTzJ1aDBNS1plc1lhd2N5VHlpVDZXTWxWM0llRGZJVUxuWlRrVnQ1Y1FXMCIsImFjY291bnRfaWQiOiI5MDU0MDAxMiIsInNob3BfaWQiOiIzOTA1NDAwMTIifQ=="
    if IS_PRODUCTION else "test_Fh8hUAVVBGUGbjmlzba6TB0iyUbos_lueTHE-axOwM0")

YOOKASSA_RETURN_URL = os.getenv("YOOKASSA_RETURN_URL", "https://t.me/FinderToolBot")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∏—Å—Å–∏–π –ÆKassa (–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–∞ 2025 –≥–æ–¥)
YOOKASSA_COMMISSIONS = {
    'bank_card': 2.9,      # –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã
    'yoo_money': 2.9,      # –ÆMoney
    'sberbank': 2.9,       # –°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω
    'sbp': 0.4,            # –°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π (–°–ë–ü)
    'qiwi': 3.5,           # QIWI –ö–æ—à–µ–ª–µ–∫
    'webmoney': 3.5,       # WebMoney
    'alfabank': 2.9,       # –ê–ª—å—Ñ–∞-–ö–ª–∏–∫
    'tinkoff_bank': 2.9,   # –¢–∏–Ω—å–∫–æ—Ñ—Ñ
    'default': 2.9
}

# –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏
SUBSCRIPTION_BASE_PRICE = float(SUBSCRIPTION_PRICE)

# Production monitoring –∏ health check –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
HEALTH_CHECK_ENABLED = os.getenv("HEALTH_CHECK_ENABLED", "true").lower() == "true"
METRICS_ENABLED = os.getenv("METRICS_ENABLED", "true").lower() == "true"
ERROR_REPORTING_ENABLED = os.getenv("ERROR_REPORTING_ENABLED", "true").lower() == "true"

# Timeout –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è production
REQUEST_TIMEOUT = int(os.getenv("REQUEST_TIMEOUT", "30"))  # —Å–µ–∫—É–Ω–¥
DATABASE_TIMEOUT = int(os.getenv("DATABASE_TIMEOUT", "10"))  # —Å–µ–∫—É–Ω–¥
PAYMENT_TIMEOUT = int(os.getenv("PAYMENT_TIMEOUT", "60"))  # —Å–µ–∫—É–Ω–¥

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
logger.info(f"üí∞ –¶–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {SUBSCRIPTION_BASE_PRICE}‚ÇΩ")
logger.info(f"üè™ –ÆKassa Shop ID: {YOOKASSA_SHOP_ID}")
logger.info(f"üîí Rate limiting: {'–≤–∫–ª—é—á–µ–Ω' if RATE_LIMIT_ENABLED else '–æ—Ç–∫–ª—é—á–µ–Ω'}")
logger.info(f"üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: {'–≤–∫–ª—é—á–µ–Ω' if HEALTH_CHECK_ENABLED else '–æ—Ç–∫–ª—é—á–µ–Ω'}")
logger.info(f"‚è±Ô∏è –¢–∞–π–º–∞—É—Ç—ã: –∑–∞–ø—Ä–æ—Å—ã={REQUEST_TIMEOUT}—Å, –ë–î={DATABASE_TIMEOUT}—Å, –ø–ª–∞—Ç–µ–∂–∏={PAYMENT_TIMEOUT}—Å")
