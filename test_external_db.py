#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π IP VPS
"""

import socket
import subprocess
import os

def test_external_postgres():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π IP"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π IP VPS")
    print("=" * 60)
    
    # IP VPS —Å–µ—Ä–≤–µ—Ä–∞
    vps_ip = "185.207.66.201"
    
    # –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    username = "findertool_user"
    password = "Findertool1999!"
    database = "findertool_prod"
    port = 5432
    
    print(f"üåê VPS IP: {vps_ip}")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}")
    print(f"üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {database}")
    print(f"üîå –ü–æ—Ä—Ç: {port}")
    print()
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS —Ä–µ–∑–æ–ª—é—Ü–∏—é IP
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS —Ä–µ–∑–æ–ª—é—Ü–∏–∏...")
    try:
        resolved_ip = socket.gethostbyname(vps_ip)
        print(f"‚úÖ DNS: {vps_ip} -> {resolved_ip}")
    except Exception as e:
        print(f"‚ùå DNS –æ—à–∏–±–∫–∞: {e}")
        return None
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞ PostgreSQL...")
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(10)
        result = sock.connect_ex((vps_ip, port))
        sock.close()
        
        if result == 0:
            print(f"‚úÖ –ü–æ—Ä—Ç {vps_ip}:{port} –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå –ü–æ—Ä—Ç {vps_ip}:{port} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {result})")
            print("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            print("   - Firewall –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ä—Ç 5432")
            print("   - PostgreSQL –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è localhost")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø–æ—Ä—Ç—É: {e}")
        return None
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL...")
    external_url = f"postgresql://{username}:{password}@{vps_ip}:{port}/{database}"
    
    try:
        import psycopg2
        print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {external_url[:50]}...")
        
        conn = psycopg2.connect(external_url)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é PostgreSQL
        cursor.execute("SELECT version();")
        version = cursor.fetchone()[0]
        print(f"‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –í–µ—Ä—Å–∏—è: {version}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SELECT datname FROM pg_database WHERE datistemplate = false;")
        databases = cursor.fetchall()
        print(f"üóÑÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –±–∞–∑—ã: {[db[0] for db in databases]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –Ω–∞—à–µ–π –±–∞–∑–µ
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
            ORDER BY table_name;
        """)
        tables = cursor.fetchall()
        if tables:
            print(f"üìã –¢–∞–±–ª–∏—Ü—ã –≤ {database}: {[t[0] for t in tables]}")
        else:
            print(f"‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ {database} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω—ã –º–∏–≥—Ä–∞—Ü–∏–∏)")
        
        cursor.close()
        conn.close()
        
        return external_url
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ PostgreSQL: {e}")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω –Ω–∞ VPS")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–Ω–µ—à–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ pg_hba.conf –∏ postgresql.conf")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ firewall –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ä—Ç 5432")
        return None

def check_postgresql_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PostgreSQL –Ω–∞ VPS"""
    print("\n4Ô∏è‚É£ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ PostgreSQL –Ω–∞ VPS...")
    print("-" * 50)
    
    print("–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑–≤–Ω–µ PostgreSQL –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω:")
    print()
    print("üìù /etc/postgresql/*/main/postgresql.conf:")
    print("   listen_addresses = '*'")
    print("   port = 5432")
    print()
    print("üìù /etc/postgresql/*/main/pg_hba.conf:")
    print("   host    all             all             0.0.0.0/0               md5")
    print()
    print("üî• Firewall (ufw):")
    print("   sudo ufw allow 5432")
    print()
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PostgreSQL:")
    print("   sudo systemctl restart postgresql")

def generate_correct_database_url(working_url):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ DATABASE_URL –¥–ª—è Dokploy"""
    if not working_url:
        return
    
    print("\n" + "=" * 60)
    print("üéâ –†–ï–®–ï–ù–ò–ï –ù–ê–ô–î–ï–ù–û!")
    print("=" * 60)
    
    print(f"\n‚úÖ –†–∞–±–æ—á–∏–π DATABASE_URL:")
    print(f"{working_url}")
    
    print(f"\nüîß –û–±–Ω–æ–≤–∏—Ç–µ –≤ Dokploy:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("2. –ù–∞–π–¥–∏—Ç–µ DATABASE_URL")
    print("3. –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞:")
    print(f"   DATABASE_URL={working_url}")
    print("4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL
    with open('correct_database_url.env', 'w') as f:
        f.write(f"# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π DATABASE_URL –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n")
        f.write(f"# –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {os.popen('date').read().strip()}\n\n")
        f.write(f"DATABASE_URL={working_url}\n")
    
    print(f"\nüíæ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: correct_database_url.env")

def main():
    print("üîó –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö POSTGRESQL –ß–ï–†–ï–ó –í–ù–ï–®–ù–ò–ô IP")
    print("=" * 70)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π IP
    working_url = test_external_postgres()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
    check_postgresql_config()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    generate_correct_database_url(working_url)
    
    if not working_url:
        print("\n" + "=" * 70)
        print("‚ùå –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ï –£–î–ê–õ–û–°–¨")
        print("=" * 70)
        print("\nüîß –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ VPS: ssh root@185.207.66.201")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å PostgreSQL: sudo systemctl status postgresql")
        print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ PostgreSQL –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π (—Å–º. –≤—ã—à–µ)")
        print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL: sudo systemctl restart postgresql")
        print("5. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç")

if __name__ == "__main__":
    main()
