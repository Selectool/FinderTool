#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è production —Å–µ—Ä–≤–µ—Ä–∞
"""
import asyncio
import asyncpg
import os

async def quick_fix():
    """–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã broadcasts"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    DATABASE_URL = "postgresql://findertool_user:Findertool1999!@postgres:5432/findertool_prod"
    
    try:
        conn = await asyncpg.connect(DATABASE_URL)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # 1. –î–µ–ª–∞–µ–º –∫–æ–ª–æ–Ω–∫—É message nullable
        try:
            await conn.execute("ALTER TABLE broadcasts ALTER COLUMN message DROP NOT NULL")
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ message —Ç–µ–ø–µ—Ä—å nullable")
        except Exception as e:
            print(f"‚ö†Ô∏è –ö–æ–ª–æ–Ω–∫–∞ —É–∂–µ nullable –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")
        
        # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        try:
            await conn.execute("ALTER TABLE broadcasts ALTER COLUMN message SET DEFAULT ''")
            print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {e}")
        
        # 3. –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        try:
            result = await conn.execute("""
                UPDATE broadcasts 
                SET message = COALESCE(message_text, title, '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ')
                WHERE message IS NULL
            """)
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–ø–∏—Å–∏: {result}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π: {e}")
        
        print("üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        try:
            await conn.close()
        except:
            pass

if __name__ == "__main__":
    asyncio.run(quick_fix())
