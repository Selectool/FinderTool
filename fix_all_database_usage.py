#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏—Ö Database –∫–ª–∞—Å—Å
"""

import os
import re
from pathlib import Path

def fix_file(file_path):
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ–¥–∏–Ω —Ñ–∞–π–ª"""
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # –ó–∞–º–µ–Ω—ã
        replacements = [
            # –ò–º–ø–æ—Ä—Ç—ã
            (r'from database\.models import Database', 'from database.universal_database import UniversalDatabase'),
            # –¢–∏–ø—ã –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            (r'db: Database', 'db: UniversalDatabase'),
            # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
            (r'Database\(', 'UniversalDatabase('),
        ]
        
        changes_made = 0
        for pattern, replacement in replacements:
            new_content = re.sub(pattern, replacement, content)
            if new_content != content:
                changes_made += len(re.findall(pattern, content))
                content = new_content
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            return changes_made
        
        return 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {file_path}: {e}")
        return -1

def main():
    print("üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï DATABASE USAGE")
    print("=" * 60)
    
    # –§–∞–π–ª—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–∏—Å–∫–ª—é—á–∞–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã)
    exclude_files = {
        'database/models.py',  # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        'database/db_adapter.py',  # –°–∏—Å—Ç–µ–º–Ω—ã–π —Ñ–∞–π–ª
        'database/monitoring.py',  # –°–∏—Å—Ç–µ–º–Ω—ã–π —Ñ–∞–π–ª
        'database/backup_system.py',  # –°–∏—Å—Ç–µ–º–Ω—ã–π —Ñ–∞–π–ª
        'database/admin_migrations.py',  # Legacy —Ñ–∞–π–ª
        'database/reset_manager.py',  # Legacy —Ñ–∞–π–ª
        'database/universal_database.py',  # –ù–∞—à –Ω–æ–≤—ã–π —Ñ–∞–π–ª
    }
    
    # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
    search_dirs = ['bot/', 'admin/', 'services/']
    
    total_files = 0
    total_changes = 0
    
    for search_dir in search_dirs:
        if not os.path.exists(search_dir):
            continue
            
        for root, dirs, files in os.walk(search_dir):
            for file in files:
                if file.endswith('.py'):
                    file_path = os.path.join(root, file).replace('\\', '/')
                    
                    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                    if file_path in exclude_files:
                        continue
                    
                    changes = fix_file(file_path)
                    if changes > 0:
                        total_files += 1
                        total_changes += changes
                        print(f"‚úÖ {file_path}: {changes} –∏–∑–º–µ–Ω–µ–Ω–∏–π")
                    elif changes == -1:
                        print(f"‚ùå {file_path}: –æ—à–∏–±–∫–∞")
    
    print()
    print(f"üìä –ò–¢–û–ì–û:")
    print(f"   - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {total_files}")
    print(f"   - –í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {total_changes}")
    
    if total_changes > 0:
        print()
        print("üéâ –í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        print("üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫")
        print("   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")
    else:
        print("\n‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã!")

if __name__ == "__main__":
    main()
