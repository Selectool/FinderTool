#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
import sys
import getpass

def create_local_database():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    # –í–æ–∑–º–æ–∂–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –¥–ª—è postgres
    possible_passwords = ['password', 'postgres', '123456', 'admin', '']
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    print("üìã –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL...")
    
    connection = None
    password = None
    
    # –ü—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
    for pwd in possible_passwords:
        try:
            print(f"üîë –ü—Ä–æ–±—É–µ–º –ø–∞—Ä–æ–ª—å: {'(–ø—É—Å—Ç–æ–π)' if pwd == '' else pwd}")
            connection = psycopg2.connect(
                host='localhost',
                port='5432',
                user='postgres',
                password=pwd,
                database='postgres'
            )
            password = pwd
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å –ø–∞—Ä–æ–ª–µ–º: {'(–ø—É—Å—Ç–æ–π)' if pwd == '' else pwd}")
            break
        except psycopg2.OperationalError as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å –ø–∞—Ä–æ–ª–µ–º '{pwd}': {e}")
            continue
    
    # –ï—Å–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –Ω–µ –ø–æ–¥–æ—à–ª–∏, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if connection is None:
        print("\nüîê –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –Ω–µ –ø–æ–¥–æ—à–ª–∏. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è postgres:")
        while connection is None:
            password = getpass.getpass("–ü–∞—Ä–æ–ª—å postgres: ")
            try:
                connection = psycopg2.connect(
                    host='localhost',
                    port='5432',
                    user='postgres',
                    password=password,
                    database='postgres'
                )
                print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
                break
            except psycopg2.OperationalError as e:
                print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å: {e}")
                retry = input("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑? (y/n): ")
                if retry.lower() != 'y':
                    print("‚ùå –û—Ç–º–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
                    return False
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        connection.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        cursor = connection.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SELECT 1 FROM pg_database WHERE datname = 'telegram_bot_local'")
        exists = cursor.fetchone()
        
        if exists:
            print("üìã –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'telegram_bot_local' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å
            recreate = input("üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö? (y/n): ")
            if recreate.lower() == 'y':
                print("üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
                cursor.execute("DROP DATABASE telegram_bot_local")
                print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞")
                
                print("üèóÔ∏è –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
                cursor.execute("CREATE DATABASE telegram_bot_local")
                print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'telegram_bot_local' —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        else:
            print("üèóÔ∏è –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö 'telegram_bot_local'...")
            cursor.execute("CREATE DATABASE telegram_bot_local")
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'telegram_bot_local' —Å–æ–∑–¥–∞–Ω–∞")
        
        cursor.close()
        connection.close()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
        print("üìù –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª...")
        update_env_file(password)
        
        print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üìä –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: postgresql://postgres:{password}@localhost:5432/telegram_bot_local")
        print("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False
    finally:
        if connection:
            connection.close()

def update_env_file(password):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    try:
        with open('.env', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç—Ä–æ–∫—É DATABASE_URL
        new_db_url = f"DATABASE_URL=postgresql://postgres:{password}@localhost:5432/telegram_bot_local"
        
        lines = content.split('\n')
        for i, line in enumerate(lines):
            if line.startswith('DATABASE_URL='):
                lines[i] = new_db_url
                break
        
        with open('.env', 'w', encoding='utf-8') as f:
            f.write('\n'.join(lines))
        
        print("‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å .env —Ñ–∞–π–ª: {e}")
        print(f"üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ DATABASE_URL –≤—Ä—É—á–Ω—É—é:")
        print(f"   DATABASE_URL=postgresql://postgres:{password}@localhost:5432/telegram_bot_local")

def test_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from dotenv import load_dotenv
        import os
        
        load_dotenv()
        database_url = os.getenv('DATABASE_URL')
        
        print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {database_url}")
        
        connection = psycopg2.connect(database_url)
        cursor = connection.cursor()
        cursor.execute("SELECT version()")
        version = cursor.fetchone()
        
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! PostgreSQL –≤–µ—Ä—Å–∏—è: {version[0]}")
        
        cursor.close()
        connection.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Telegram Channel Finder Bot")
    print("=" * 70)
    
    if create_local_database():
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
        test_connection()
    else:
        print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        sys.exit(1)
