#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ PostgreSQL –Ω–∞ VPS 185.207.66.201
–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL
"""

import socket
import subprocess
import os

def check_vps_connectivity():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–π —Å–≤—è–∑–Ω–æ—Å—Ç–∏ —Å VPS"""
    vps_ip = "185.207.66.201"
    
    print("üåê –ü–†–û–í–ï–†–ö–ê –°–í–Ø–ó–ù–û–°–¢–ò –° VPS")
    print("=" * 40)
    
    # Ping —Ç–µ—Å—Ç
    print(f"üì° Ping —Ç–µ—Å—Ç {vps_ip}...")
    try:
        result = subprocess.run(['ping', '-c', '3', vps_ip], 
                              capture_output=True, text=True, timeout=15)
        if result.returncode == 0:
            print("‚úÖ VPS –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ ping")
        else:
            print("‚ùå VPS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ ping")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ ping: {e}")
        return False
    
    # SSH –ø–æ—Ä—Ç —Ç–µ—Å—Ç
    print(f"\nüîê –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –ø–æ—Ä—Ç–∞ (22)...")
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(5)
        result = sock.connect_ex((vps_ip, 22))
        sock.close()
        
        if result == 0:
            print("‚úÖ SSH –ø–æ—Ä—Ç (22) –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ùå SSH –ø–æ—Ä—Ç (22) –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SSH —Ç–µ—Å—Ç–∞: {e}")
        return False
    
    return True

def check_postgres_port():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ PostgreSQL"""
    vps_ip = "185.207.66.201"
    
    print(f"\nüóÑÔ∏è –ü–†–û–í–ï–†–ö–ê POSTGRESQL –ü–û–†–¢–ê")
    print("=" * 40)
    
    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç PostgreSQL
    print(f"üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 5432...")
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(10)
        result = sock.connect_ex((vps_ip, 5432))
        sock.close()
        
        if result == 0:
            print("‚úÖ PostgreSQL –ø–æ—Ä—Ç (5432) –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print("‚ùå PostgreSQL –ø–æ—Ä—Ç (5432) –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            print(f"   –ö–æ–¥ –æ—à–∏–±–∫–∏: {result}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞: {e}")
        return False

def generate_vps_setup_commands():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL –Ω–∞ VPS"""
    print(f"\nüîß –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ù–ê–°–¢–†–û–ô–ö–ò POSTGRESQL –ù–ê VPS")
    print("=" * 50)
    
    commands = [
        "# 1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPS",
        "ssh root@185.207.66.201",
        "",
        "# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ PostgreSQL",
        "sudo systemctl status postgresql",
        "sudo systemctl status postgresql@*",
        "",
        "# 3. –ï—Å–ª–∏ PostgreSQL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:",
        "sudo apt update",
        "sudo apt install postgresql postgresql-contrib -y",
        "",
        "# 4. –ó–∞–ø—É—Å–∫ PostgreSQL",
        "sudo systemctl start postgresql",
        "sudo systemctl enable postgresql",
        "",
        "# 5. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        "sudo -u postgres psql",
        "CREATE USER findertool_user WITH PASSWORD 'Findertool1999!';",
        "CREATE DATABASE findertool_prod OWNER findertool_user;",
        "GRANT ALL PRIVILEGES ON DATABASE findertool_prod TO findertool_user;",
        "\\q",
        "",
        "# 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π",
        "# –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º postgresql.conf",
        "sudo nano /etc/postgresql/*/main/postgresql.conf",
        "# –ù–∞–π–¥–∏—Ç–µ –∏ –∏–∑–º–µ–Ω–∏—Ç–µ:",
        "# listen_addresses = '*'",
        "# port = 5432",
        "",
        "# 7. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏",
        "# –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º pg_hba.conf",
        "sudo nano /etc/postgresql/*/main/pg_hba.conf",
        "# –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞:",
        "# host    all             all             0.0.0.0/0               md5",
        "",
        "# 8. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall",
        "sudo ufw status",
        "sudo ufw allow 5432/tcp",
        "sudo ufw reload",
        "",
        "# 9. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PostgreSQL",
        "sudo systemctl restart postgresql",
        "",
        "# 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è",
        "sudo -u postgres psql -h localhost -p 5432 -U findertool_user -d findertool_prod",
        "",
        "# 11. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤",
        "sudo netstat -tlnp | grep 5432",
        "sudo ss -tlnp | grep 5432"
    ]
    
    for cmd in commands:
        print(cmd)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ —Ñ–∞–π–ª
    with open('vps_postgres_setup.sh', 'w') as f:
        f.write("#!/bin/bash\n")
        f.write("# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL –Ω–∞ VPS 185.207.66.201\n\n")
        for cmd in commands:
            if not cmd.startswith('#') and cmd.strip():
                f.write(f"{cmd}\n")
    
    print(f"\nüíæ –ö–æ–º–∞–Ω–¥—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: vps_postgres_setup.sh")

def generate_quick_test_commands():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print(f"\n‚ö° –ë–´–°–¢–†–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ù–ê VPS")
    print("=" * 40)
    
    quick_commands = [
        "# –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ VPS –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:",
        "ssh root@185.207.66.201",
        "",
        "# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL:",
        "sudo systemctl is-active postgresql",
        "sudo systemctl is-enabled postgresql",
        "sudo netstat -tlnp | grep 5432",
        "sudo ufw status | grep 5432",
        "",
        "# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:",
        "sudo -u postgres psql -c \"SHOW listen_addresses;\"",
        "sudo -u postgres psql -c \"SHOW port;\"",
        "",
        "# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –±–∞–∑:",
        "sudo -u postgres psql -c \"\\du\"",
        "sudo -u postgres psql -c \"\\l\"",
    ]
    
    for cmd in quick_commands:
        print(cmd)

def check_dokploy_postgres():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL –≤ Dokploy"""
    print(f"\nüê≥ –ü–†–û–í–ï–†–ö–ê POSTGRESQL –í DOKPLOY")
    print("=" * 40)
    
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Dokploy PostgreSQL —Å–µ—Ä–≤–∏—Å:")
    print("   https://app.dokploy.com/dashboard/project/11aoVJ3mH1tcOu4BiGxVB/services/postgres/inGABWIP0OB6grXZXTORS")
    print()
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'Running')")
    print()
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ PostgreSQL —Å–µ—Ä–≤–∏—Å–∞")
    print()
    print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ:")
    print("   POSTGRES_DB=findertool_prod")
    print("   POSTGRES_USER=findertool_user")
    print("   POSTGRES_PASSWORD=Findertool1999!")
    print()
    print("5. –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ")

def main():
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê POSTGRESQL –ù–ê VPS 185.207.66.201")
    print("=" * 60)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é —Å–≤—è–∑–Ω–æ—Å—Ç—å
    if not check_vps_connectivity():
        print("\n‚ùå VPS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.")
        return
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç PostgreSQL
    postgres_available = check_postgres_port()
    
    # 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    generate_vps_setup_commands()
    
    # 4. –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    generate_quick_test_commands()
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ Dokploy
    check_dokploy_postgres()
    
    # 6. –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print(f"\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("=" * 60)
    
    if postgres_available:
        print("‚úÖ PostgreSQL –ø–æ—Ä—Ç –¥–æ—Å—Ç—É–ø–µ–Ω - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
        print("   python test_external_db.py")
    else:
        print("‚ùå PostgreSQL –ø–æ—Ä—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("\nüîß –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ VPS: ssh root@185.207.66.201")
        print("2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –±—ã—Å—Ç—Ä—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É (–∫–æ–º–∞–Ω–¥—ã –≤—ã—à–µ)")
        print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ PostgreSQL (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ vps_postgres_setup.sh)")
        print("4. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ PostgreSQL –∏–∑ Dokploy —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º —Ö–æ—Å—Ç–∞")
        
        print("\nüí° –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û–ï –†–ï–®–ï–ù–ò–ï:")
        print("–ï—Å–ª–∏ PostgreSQL –∑–∞–ø—É—â–µ–Ω –≤ Dokploy, –Ω–∞–π–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è —Ö–æ—Å—Ç–∞:")
        print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Dokploy PostgreSQL —Å–µ—Ä–≤–∏—Å–∞")
        print("- –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É IP")
        print("- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker network inspect –¥–ª—è –ø–æ–∏—Å–∫–∞ IP PostgreSQL")

if __name__ == "__main__":
    main()
