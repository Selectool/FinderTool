#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö result[0] –Ω–∞ _extract_count –≤ UniversalDatabase
"""

import re

def fix_universal_database():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ result[0] –≤ UniversalDatabase"""
    
    with open('database/universal_database.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∑–∞–º–µ–Ω—ã
    patterns = [
        # result[0] if result else 0
        (r'(\w+_result)\[0\]\s+if\s+\1\s+else\s+0', r'self._extract_count(\1)'),
        # result[0] if result else default
        (r'(\w+)\[0\]\s+if\s+\1\s+else\s+\d+', r'self._extract_count(\1)'),
        # return result[0] if result else 0
        (r'return\s+(\w+)\[0\]\s+if\s+\1\s+else\s+0', r'return self._extract_count(\1)'),
        # variable = result[0] if result else 0
        (r'(\w+)\s*=\s*(\w+)\[0\]\s+if\s+\2\s+else\s+0', r'\1 = self._extract_count(\2)'),
        # –ü—Ä–æ—Å—Ç—ã–µ —Å–ª—É—á–∞–∏ result[0]
        (r'(\w+_result)\[0\](?!\s+if)', r'self._extract_count(\1)'),
    ]
    
    changes_made = 0
    for pattern, replacement in patterns:
        new_content = re.sub(pattern, replacement, content)
        if new_content != content:
            matches = len(re.findall(pattern, content))
            changes_made += matches
            content = new_content
            print(f"‚úÖ –ó–∞–º–µ–Ω–µ–Ω–æ {matches} –≤—Ö–æ–∂–¥–µ–Ω–∏–π: {pattern}")
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    with open('database/universal_database.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"\nüéâ –í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {changes_made}")
    return changes_made

if __name__ == "__main__":
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PostgreSQL —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ UniversalDatabase...")
    changes = fix_universal_database()
    if changes > 0:
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã.")
    else:
        print("‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
